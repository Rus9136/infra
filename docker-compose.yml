version: '3.8'
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./webapp:/usr/share/nginx/html:ro
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    restart: always
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    
  postgres:
    image: postgres:14
    container_name: telegram_app_postgres
    environment:
      POSTGRES_DB: telegram_miniapp_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: your_secure_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: telegram_app_api
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=your_secure_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=telegram_miniapp_db
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app
    depends_on:
      - postgres
    restart: always

volumes:
  postgres_data: